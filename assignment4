# Standard scientific Python imports
import matplotlib.pyplot as plt

# Import datasets, classifiers and performance metrics
from sklearn import datasets, svm, metrics
from sklearn.model_selection import train_test_split

GAMMAS = [0.005,0.001,0.05,0.01,0.1,0.5]
Clist=[0.1,0.5,1,3,5]
C=0.5
GAMMA=0.005
train_frac = 0.8
test_frac = 0.1
dev_frac = 0.1

#PART: load dataset -- data from csv, tsv, jsonl, pickle
digits = datasets.load_digits()

def reshapeImages(inputDigits):
    n_samples = len(inputDigits.images)
    reshapedImages = inputDigits.images.reshape((n_samples, -1))
    return reshapedImages

def decisiontree(X_train, y_train, X_test, y_test):
     from sklearn import tree
     clf = tree.DecisionTreeClassifier()  
     clf.fit(X_train, y_train)
     predicted_test = clf.predict(X_test)
     test_accuracy = metrics.accuracy_score(predicted_test,y_test)
     return test_accuracy

 
def svm(X_train, y_train, X_test, y_test):
    from sklearn import datasets, svm, metrics
    clf = svm.SVC() 
    clf.fit(X_train, y_train)
    predicted_test = clf.predict(X_test)
    test_accuracy = metrics.accuracy_score(predicted_test,y_test)
    return test_accuracy

from sklearn.model_selection import KFold
import pandas as pd
digits = datasets.load_digits()
reshapedImages=reshapeImages(digits)
df=pd.DataFrame(columns=['run','svm','decisiontree'])
kfold = KFold(5)
X=reshapedImages
y=digits.target
indexnum=1
for train_index, test_index in kfold.split(reshapedImages):
    #print("TRAIN:", train_index, "TEST:", test_index)
    
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    decisionAcc=decisiontree(X_train, y_train, X_test, y_test )
    svmAcc=svm(X_train, y_train, X_test, y_test)
    print(decisiontree(X_train, y_train, X_test, y_test ))
    print(svm(X_train, y_train, X_test, y_test))
    indexnum=indexnum+1
    df.at[indexnum,'run']=indexnum
    df.at[indexnum,'svm']=svmAcc
    df.at[indexnum,'decisiontree']=decisionAcc

print(df.head())
#for index,row in df.iterrows():
